package main

import (
	"reflect"
	"testing"
)

func Test_wayfind(t *testing.T) {
	type args struct {
		filename string
	}
	tests := []struct {
		name string
		args args
		want [][]Coord
	}{
		{
			name: "simple",
			args: args{filename: "test_1.txt"},
			want: [][]Coord{
				{{x: 9, y: 2}, {x: 9, y: 3}, {x: 9, y: 4}, {x: 9, y: 5}, {x: 9, y: 6}, {x: 2, y: 8}, {x: 3, y: 8}, {x: 4, y: 8}, {x: 4, y: 9}, {x: 4, y: 10}, {x: 5, y: 10}, {x: 6, y: 10}, {x: 2, y: 13}, {x: 3, y: 13}, {x: 3, y: 14}, {x: 3, y: 15}, {x: 2, y: 15}, {x: 11, y: 12}, {x: 11, y: 13}, {x: 12, y: 13}, {x: 13, y: 13}, {x: 13, y: 14}, {x: 13, y: 15}, {x: 13, y: 16}},
				{{x: 9, y: 2}, {x: 9, y: 3}, {x: 10, y: 3}, {x: 11, y: 3}, {x: 12, y: 3}, {x: 13, y: 3}, {x: 14, y: 3}, {x: 15, y: 3}, {x: 16, y: 3}, {x: 17, y: 3}, {x: 17, y: 4}, {x: 17, y: 5}, {x: 17, y: 6}, {x: 17, y: 7}, {x: 17, y: 8}, {x: 17, y: 9}, {x: 17, y: 10}, {x: 17, y: 11}, {x: 17, y: 12}, {x: 17, y: 13}, {x: 17, y: 14}, {x: 17, y: 15}, {x: 16, y: 15}, {x: 15, y: 15}, {x: 14, y: 15}, {x: 13, y: 15}, {x: 13, y: 16}},
			},
		},
		{
			name: "medium",
			args: args{filename: "test_2.txt"},
			want: [][]Coord{
				{{x: 19, y: 2}, {x: 19, y: 3}, {x: 18, y: 3}, {x: 17, y: 3}, {x: 16, y: 3}, {x: 15, y: 3}, {x: 15, y: 4}, {x: 15, y: 5}, {x: 16, y: 5}, {x: 17, y: 5}, {x: 17, y: 6}, {x: 17, y: 7}, {x: 17, y: 8}, {x: 32, y: 17}, {x: 31, y: 17}, {x: 31, y: 16}, {x: 31, y: 15}, {x: 30, y: 15}, {x: 29, y: 15}, {x: 28, y: 15}, {x: 27, y: 15}, {x: 27, y: 16}, {x: 27, y: 17}, {x: 26, y: 17}, {x: 32, y: 23}, {x: 31, y: 23}, {x: 31, y: 24}, {x: 31, y: 25}, {x: 30, y: 25}, {x: 29, y: 25}, {x: 28, y: 25}, {x: 27, y: 25}, {x: 27, y: 24}, {x: 27, y: 23}, {x: 27, y: 22}, {x: 27, y: 21}, {x: 26, y: 21}, {x: 11, y: 34}, {x: 11, y: 33}, {x: 12, y: 33}, {x: 13, y: 33}, {x: 13, y: 32}, {x: 13, y: 31}, {x: 13, y: 30}, {x: 13, y: 29}, {x: 13, y: 28}, {x: 2, y: 19}, {x: 3, y: 19}, {x: 3, y: 20}, {x: 3, y: 21}, {x: 4, y: 21}, {x: 5, y: 21}, {x: 5, y: 20}, {x: 5, y: 19}, {x: 5, y: 18}, {x: 5, y: 17}, {x: 4, y: 17}, {x: 3, y: 17}, {x: 2, y: 17}},
				{{x: 19, y: 2}, {x: 19, y: 3}, {x: 19, y: 4}, {x: 19, y: 5}, {x: 20, y: 5}, {x: 21, y: 5}, {x: 22, y: 5}, {x: 23, y: 5}, {x: 23, y: 6}, {x: 23, y: 7}, {x: 22, y: 7}, {x: 21, y: 7}, {x: 21, y: 8}, {x: 19, y: 34}, {x: 19, y: 33}, {x: 20, y: 33}, {x: 21, y: 33}, {x: 21, y: 32}, {x: 21, y: 31}, {x: 21, y: 30}, {x: 21, y: 29}, {x: 21, y: 28}, {x: 15, y: 34}, {x: 15, y: 33}, {x: 16, y: 33}, {x: 17, y: 33}, {x: 17, y: 32}, {x: 17, y: 31}, {x: 17, y: 30}, {x: 17, y: 29}, {x: 16, y: 29}, {x: 15, y: 29}, {x: 15, y: 28}, {x: 32, y: 21}, {x: 31, y: 21}, {x: 31, y: 20}, {x: 31, y: 19}, {x: 30, y: 19}, {x: 29, y: 19}, {x: 29, y: 20}, {x: 29, y: 21}, {x: 28, y: 21}, {x: 27, y: 21}, {x: 26, y: 21}, {x: 11, y: 34}, {x: 11, y: 33}, {x: 12, y: 33}, {x: 13, y: 33}, {x: 13, y: 32}, {x: 13, y: 31}, {x: 13, y: 30}, {x: 13, y: 29}, {x: 13, y: 28}, {x: 2, y: 19}, {x: 3, y: 19}, {x: 3, y: 20}, {x: 3, y: 21}, {x: 4, y: 21}, {x: 5, y: 21}, {x: 5, y: 20}, {x: 5, y: 19}, {x: 5, y: 18}, {x: 5, y: 17}, {x: 4, y: 17}, {x: 3, y: 17}, {x: 2, y: 17}},
				{{x: 19, y: 2}, {x: 19, y: 3}, {x: 18, y: 3}, {x: 17, y: 3}, {x: 16, y: 3}, {x: 15, y: 3}, {x: 15, y: 4}, {x: 15, y: 5}, {x: 16, y: 5}, {x: 17, y: 5}, {x: 17, y: 6}, {x: 17, y: 7}, {x: 17, y: 8}, {x: 32, y: 17}, {x: 31, y: 17}, {x: 31, y: 16}, {x: 31, y: 15}, {x: 30, y: 15}, {x: 29, y: 15}, {x: 28, y: 15}, {x: 27, y: 15}, {x: 27, y: 16}, {x: 27, y: 17}, {x: 26, y: 17}, {x: 32, y: 23}, {x: 31, y: 23}, {x: 31, y: 24}, {x: 31, y: 25}, {x: 30, y: 25}, {x: 29, y: 25}, {x: 28, y: 25}, {x: 27, y: 25}, {x: 27, y: 24}, {x: 27, y: 23}, {x: 26, y: 23}, {x: 32, y: 11}, {x: 31, y: 11}, {x: 30, y: 11}, {x: 29, y: 11}, {x: 28, y: 11}, {x: 27, y: 11}, {x: 27, y: 12}, {x: 27, y: 13}, {x: 26, y: 13}, {x: 2, y: 23}, {x: 3, y: 23}, {x: 4, y: 23}, {x: 5, y: 23}, {x: 6, y: 23}, {x: 7, y: 23}, {x: 7, y: 22}, {x: 7, y: 21}, {x: 8, y: 21}, {x: 2, y: 15}, {x: 3, y: 15}, {x: 3, y: 14}, {x: 3, y: 13}, {x: 4, y: 13}, {x: 5, y: 13}, {x: 5, y: 12}, {x: 5, y: 11}, {x: 6, y: 11}, {x: 7, y: 11}, {x: 7, y: 12}, {x: 7, y: 13}, {x: 7, y: 14}, {x: 7, y: 15}, {x: 7, y: 16}, {x: 7, y: 17}, {x: 6, y: 17}, {x: 5, y: 17}, {x: 4, y: 17}, {x: 3, y: 17}, {x: 2, y: 17}},
				{{x: 19, y: 2}, {x: 19, y: 3}, {x: 19, y: 4}, {x: 19, y: 5}, {x: 20, y: 5}, {x: 21, y: 5}, {x: 22, y: 5}, {x: 23, y: 5}, {x: 23, y: 6}, {x: 23, y: 7}, {x: 22, y: 7}, {x: 21, y: 7}, {x: 21, y: 8}, {x: 19, y: 34}, {x: 19, y: 33}, {x: 20, y: 33}, {x: 21, y: 33}, {x: 21, y: 32}, {x: 21, y: 31}, {x: 21, y: 30}, {x: 21, y: 29}, {x: 21, y: 28}, {x: 15, y: 34}, {x: 15, y: 33}, {x: 16, y: 33}, {x: 17, y: 33}, {x: 17, y: 32}, {x: 17, y: 31}, {x: 17, y: 30}, {x: 17, y: 29}, {x: 16, y: 29}, {x: 15, y: 29}, {x: 15, y: 28}, {x: 32, y: 21}, {x: 31, y: 21}, {x: 31, y: 20}, {x: 31, y: 19}, {x: 30, y: 19}, {x: 29, y: 19}, {x: 29, y: 20}, {x: 29, y: 21}, {x: 28, y: 21}, {x: 27, y: 21}, {x: 27, y: 22}, {x: 27, y: 23}, {x: 26, y: 23}, {x: 32, y: 11}, {x: 31, y: 11}, {x: 30, y: 11}, {x: 29, y: 11}, {x: 28, y: 11}, {x: 27, y: 11}, {x: 27, y: 12}, {x: 27, y: 13}, {x: 26, y: 13}, {x: 2, y: 23}, {x: 3, y: 23}, {x: 4, y: 23}, {x: 5, y: 23}, {x: 6, y: 23}, {x: 7, y: 23}, {x: 7, y: 22}, {x: 7, y: 21}, {x: 8, y: 21}, {x: 2, y: 15}, {x: 3, y: 15}, {x: 3, y: 14}, {x: 3, y: 13}, {x: 4, y: 13}, {x: 5, y: 13}, {x: 5, y: 12}, {x: 5, y: 11}, {x: 6, y: 11}, {x: 7, y: 11}, {x: 7, y: 12}, {x: 7, y: 13}, {x: 7, y: 14}, {x: 7, y: 15}, {x: 7, y: 16}, {x: 7, y: 17}, {x: 6, y: 17}, {x: 5, y: 17}, {x: 4, y: 17}, {x: 3, y: 17}, {x: 2, y: 17}},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := wayfind(tt.args.filename); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("wayfind() = %v, want %v", got, tt.want)
			}
		})
	}
}
